[{"/home/ahvapimenta/workspace/insult-generator/src/index.js":"1","/home/ahvapimenta/workspace/insult-generator/src/App.js":"2","/home/ahvapimenta/workspace/insult-generator/src/reportWebVitals.js":"3","/home/ahvapimenta/workspace/insult-generator/src/api.js":"4"},{"size":500,"mtime":1606409642694,"results":"5","hashOfConfig":"6"},{"size":1837,"mtime":1606418071987,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":1606409642697,"results":"8","hashOfConfig":"6"},{"size":510,"mtime":1606416368207,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"acv8fz",{"filePath":"13","messages":"14","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"15","usedDeprecatedRules":"12"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/ahvapimenta/workspace/insult-generator/src/index.js",[],["20","21"],"/home/ahvapimenta/workspace/insult-generator/src/App.js",["22","23","24"],"import './App.css';\nimport { useState, useEffect, lazy } from 'react';\nimport axios from 'axios';\nimport config from './api';\n\nconst Header = () => {\n  return (\n    <header className=\"header\">\n      <h1>Insult Generator</h1>\n    </header>\n  )\n}\n\nconst Footer = () => {\n  return (\n    <footer className=\"footer\">\n      <span>\n        Feito com ðŸ’™ por <br/>\n        <a href=\"https://tamires-manhaes.github.io\" rel=\"noreferrer\" target=\"_blank\">Tamires ManhÃ£es</a>\n      </span>\n    </footer>\n  )\n}\n\nconst Container = ({ children }) => {\n  return (\n    <div className=\"container\">\n        <Header />\n        <div className=\"wrapper\">\n          { children }\n        </div>\n        <Footer />\n    </div>\n  )\n}\n\nconst Button = ({ title, action }) => {\n  return(\n    <button onClick={action} className=\"buttonAction\">\n      <span>{title}</span>\n    </button>\n  )\n}\n\nconst InsultCard = ({ insult }) => {\n  return (\n    <div className=\"insultCard\">\n      <span>{ insult }</span>\n    </div>\n  )\n}\n\nconst Loading = () => {\n  return (\n    <div className=\"loader\"></div>\n  )\n}\n\nfunction App() {\n  const [insult, setInsult] = useState();\n  const [loading, setLoading] = useState(false);\n\n  async function action(){\n    setLoading(true);\n    await axios.get(config.baseUrl, {\n      headers: config.headers\n    }).\n    then(response => { setLoading(true); setInsult(response.data);});\n    setLoading(false);\n  }\n\n  return (\n    <Container>\n      {loading === true && insult !== null ? (\n        <Loading />\n      ) : ( \n        <></>\n      )}\n\n      {insult !== null && insult !== undefined ? (\n        <>\n          <InsultCard insult={insult.insult}/>\n          <Button title=\"Click again\" action={action}/>\n        </>\n      ): (<><Button title=\"Click to generate insult\" action={action}/></>)}\n        \n    </Container>\n  );\n}\n\nexport default App;\n","/home/ahvapimenta/workspace/insult-generator/src/reportWebVitals.js",[],"/home/ahvapimenta/workspace/insult-generator/src/api.js",[],{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","severity":1,"message":"30","line":2,"column":20,"nodeType":"31","messageId":"32","endLine":2,"endColumn":29},{"ruleId":"29","severity":1,"message":"33","line":2,"column":31,"nodeType":"31","messageId":"32","endLine":2,"endColumn":35},{"ruleId":"34","severity":1,"message":"35","line":67,"column":7,"nodeType":"36","messageId":"37","endLine":67,"endColumn":8,"fix":"38"},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'lazy' is defined but never used.","dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"41","text":"42"},"no-global-assign","no-unsafe-negation",[1296,1302],"\n    ."]